#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_QLCHTL")]
	public partial class QL_CHTLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCART_PRODUCT(CART_PRODUCT instance);
    partial void UpdateCART_PRODUCT(CART_PRODUCT instance);
    partial void DeleteCART_PRODUCT(CART_PRODUCT instance);
    partial void InsertCART(CART instance);
    partial void UpdateCART(CART instance);
    partial void DeleteCART(CART instance);
    partial void InsertORDER_PRODUCT(ORDER_PRODUCT instance);
    partial void UpdateORDER_PRODUCT(ORDER_PRODUCT instance);
    partial void DeleteORDER_PRODUCT(ORDER_PRODUCT instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertSESSION(SESSION instance);
    partial void UpdateSESSION(SESSION instance);
    partial void DeleteSESSION(SESSION instance);
    partial void InsertSTAFF(STAFF instance);
    partial void UpdateSTAFF(STAFF instance);
    partial void DeleteSTAFF(STAFF instance);
    partial void InsertTYPE_PRODUCT(TYPE_PRODUCT instance);
    partial void UpdateTYPE_PRODUCT(TYPE_PRODUCT instance);
    partial void DeleteTYPE_PRODUCT(TYPE_PRODUCT instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public QL_CHTLDataContext() : 
				base(global::DTO.Properties.Settings.Default.DB_QLCHTLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHTLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHTLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHTLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHTLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CART_PRODUCT> CART_PRODUCTs
		{
			get
			{
				return this.GetTable<CART_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<CART> CARTs
		{
			get
			{
				return this.GetTable<CART>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_PRODUCT> ORDER_PRODUCTs
		{
			get
			{
				return this.GetTable<ORDER_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<SESSION> SESSIONs
		{
			get
			{
				return this.GetTable<SESSION>();
			}
		}
		
		public System.Data.Linq.Table<STAFF> STAFFs
		{
			get
			{
				return this.GetTable<STAFF>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_PRODUCT> TYPE_PRODUCTs
		{
			get
			{
				return this.GetTable<TYPE_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART_PRODUCTS")]
	public partial class CART_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PRODUCT_ID;
		
		private int _CART_ID;
		
		private int _QUANTITY;
		
		private EntityRef<CART> _CART;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPRODUCT_IDChanging(int value);
    partial void OnPRODUCT_IDChanged();
    partial void OnCART_IDChanging(int value);
    partial void OnCART_IDChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public CART_PRODUCT()
		{
			this._CART = default(EntityRef<CART>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", DbType="Int NOT NULL")]
		public int PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CART_ID", DbType="Int NOT NULL")]
		public int CART_ID
		{
			get
			{
				return this._CART_ID;
			}
			set
			{
				if ((this._CART_ID != value))
				{
					if (this._CART.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCART_IDChanging(value);
					this.SendPropertyChanging();
					this._CART_ID = value;
					this.SendPropertyChanged("CART_ID");
					this.OnCART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_CART_PRODUCT", Storage="_CART", ThisKey="CART_ID", OtherKey="CART_ID", IsForeignKey=true)]
		public CART CART
		{
			get
			{
				return this._CART.Entity;
			}
			set
			{
				CART previousValue = this._CART.Entity;
				if (((previousValue != value) 
							|| (this._CART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CART.Entity = null;
						previousValue.CART_PRODUCTs.Remove(this);
					}
					this._CART.Entity = value;
					if ((value != null))
					{
						value.CART_PRODUCTs.Add(this);
						this._CART_ID = value.CART_ID;
					}
					else
					{
						this._CART_ID = default(int);
					}
					this.SendPropertyChanged("CART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART_PRODUCT", Storage="_PRODUCT", ThisKey="PRODUCT_ID", OtherKey="PRODUCT_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.CART_PRODUCTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.CART_PRODUCTs.Add(this);
						this._PRODUCT_ID = value.PRODUCT_ID;
					}
					else
					{
						this._PRODUCT_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CARTS")]
	public partial class CART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CART_ID;
		
		private int _USER_ID;
		
		private EntitySet<CART_PRODUCT> _CART_PRODUCTs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCART_IDChanging(int value);
    partial void OnCART_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public CART()
		{
			this._CART_PRODUCTs = new EntitySet<CART_PRODUCT>(new Action<CART_PRODUCT>(this.attach_CART_PRODUCTs), new Action<CART_PRODUCT>(this.detach_CART_PRODUCTs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CART_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CART_ID
		{
			get
			{
				return this._CART_ID;
			}
			set
			{
				if ((this._CART_ID != value))
				{
					this.OnCART_IDChanging(value);
					this.SendPropertyChanging();
					this._CART_ID = value;
					this.SendPropertyChanged("CART_ID");
					this.OnCART_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CART_CART_PRODUCT", Storage="_CART_PRODUCTs", ThisKey="CART_ID", OtherKey="CART_ID")]
		public EntitySet<CART_PRODUCT> CART_PRODUCTs
		{
			get
			{
				return this._CART_PRODUCTs;
			}
			set
			{
				this._CART_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CART_PRODUCTs(CART_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CART = this;
		}
		
		private void detach_CART_PRODUCTs(CART_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CART = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_PRODUCTS")]
	public partial class ORDER_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ORDER_ID;
		
		private int _PRODUCT_ID;
		
		private int _QUANTITY;
		
		private EntityRef<ORDER> _ORDER;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_IDChanging(int value);
    partial void OnORDER_IDChanged();
    partial void OnPRODUCT_IDChanging(int value);
    partial void OnPRODUCT_IDChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public ORDER_PRODUCT()
		{
			this._ORDER = default(EntityRef<ORDER>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int NOT NULL")]
		public int ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", DbType="Int NOT NULL")]
		public int PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_PRODUCT", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ORDER_ID", IsForeignKey=true)]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_PRODUCTs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_PRODUCTs.Add(this);
						this._ORDER_ID = value.ORDER_ID;
					}
					else
					{
						this._ORDER_ID = default(int);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDER_PRODUCT", Storage="_PRODUCT", ThisKey="PRODUCT_ID", OtherKey="PRODUCT_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.ORDER_PRODUCTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.ORDER_PRODUCTs.Add(this);
						this._PRODUCT_ID = value.PRODUCT_ID;
					}
					else
					{
						this._PRODUCT_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ORDER_ID;
		
		private decimal _FEE;
		
		private string _USER_EMAIL;
		
		private int _USER_ID;
		
		private System.Nullable<System.DateTime> _CREATED_AT;
		
		private EntitySet<ORDER_PRODUCT> _ORDER_PRODUCTs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnORDER_IDChanging(int value);
    partial void OnORDER_IDChanged();
    partial void OnFEEChanging(decimal value);
    partial void OnFEEChanged();
    partial void OnUSER_EMAILChanging(string value);
    partial void OnUSER_EMAILChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnCREATED_ATChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ATChanged();
    #endregion
		
		public ORDER()
		{
			this._ORDER_PRODUCTs = new EntitySet<ORDER_PRODUCT>(new Action<ORDER_PRODUCT>(this.attach_ORDER_PRODUCTs), new Action<ORDER_PRODUCT>(this.detach_ORDER_PRODUCTs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEE", DbType="Decimal(10,3) NOT NULL")]
		public decimal FEE
		{
			get
			{
				return this._FEE;
			}
			set
			{
				if ((this._FEE != value))
				{
					this.OnFEEChanging(value);
					this.SendPropertyChanging();
					this._FEE = value;
					this.SendPropertyChanged("FEE");
					this.OnFEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this.OnUSER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL = value;
					this.SendPropertyChanged("USER_EMAIL");
					this.OnUSER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_AT", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_AT
		{
			get
			{
				return this._CREATED_AT;
			}
			set
			{
				if ((this._CREATED_AT != value))
				{
					this.OnCREATED_ATChanging(value);
					this.SendPropertyChanging();
					this._CREATED_AT = value;
					this.SendPropertyChanged("CREATED_AT");
					this.OnCREATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_PRODUCT", Storage="_ORDER_PRODUCTs", ThisKey="ORDER_ID", OtherKey="ORDER_ID")]
		public EntitySet<ORDER_PRODUCT> ORDER_PRODUCTs
		{
			get
			{
				return this._ORDER_PRODUCTs;
			}
			set
			{
				this._ORDER_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_ORDER", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_PRODUCTs(ORDER_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_PRODUCTs(ORDER_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTS")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUCT_ID;
		
		private string _TITLE;
		
		private decimal _PRICE;
		
		private string _IMAGE_URL;
		
		private string _IMAGE_ID;
		
		private int _TYPE_ID;
		
		private System.Nullable<System.DateTime> _CREATED_AT;
		
		private EntitySet<CART_PRODUCT> _CART_PRODUCTs;
		
		private EntitySet<ORDER_PRODUCT> _ORDER_PRODUCTs;
		
		private EntityRef<TYPE_PRODUCT> _TYPE_PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUCT_IDChanging(int value);
    partial void OnPRODUCT_IDChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnIMAGE_URLChanging(string value);
    partial void OnIMAGE_URLChanged();
    partial void OnIMAGE_IDChanging(string value);
    partial void OnIMAGE_IDChanged();
    partial void OnTYPE_IDChanging(int value);
    partial void OnTYPE_IDChanged();
    partial void OnCREATED_ATChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ATChanged();
    #endregion
		
		public PRODUCT()
		{
			this._CART_PRODUCTs = new EntitySet<CART_PRODUCT>(new Action<CART_PRODUCT>(this.attach_CART_PRODUCTs), new Action<CART_PRODUCT>(this.detach_CART_PRODUCTs));
			this._ORDER_PRODUCTs = new EntitySet<ORDER_PRODUCT>(new Action<ORDER_PRODUCT>(this.attach_ORDER_PRODUCTs), new Action<ORDER_PRODUCT>(this.detach_ORDER_PRODUCTs));
			this._TYPE_PRODUCT = default(EntityRef<TYPE_PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Decimal(10,2) NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_URL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string IMAGE_URL
		{
			get
			{
				return this._IMAGE_URL;
			}
			set
			{
				if ((this._IMAGE_URL != value))
				{
					this.OnIMAGE_URLChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_URL = value;
					this.SendPropertyChanged("IMAGE_URL");
					this.OnIMAGE_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_ID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string IMAGE_ID
		{
			get
			{
				return this._IMAGE_ID;
			}
			set
			{
				if ((this._IMAGE_ID != value))
				{
					this.OnIMAGE_IDChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_ID = value;
					this.SendPropertyChanged("IMAGE_ID");
					this.OnIMAGE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_ID", DbType="Int NOT NULL")]
		public int TYPE_ID
		{
			get
			{
				return this._TYPE_ID;
			}
			set
			{
				if ((this._TYPE_ID != value))
				{
					if (this._TYPE_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._TYPE_ID = value;
					this.SendPropertyChanged("TYPE_ID");
					this.OnTYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_AT", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_AT
		{
			get
			{
				return this._CREATED_AT;
			}
			set
			{
				if ((this._CREATED_AT != value))
				{
					this.OnCREATED_ATChanging(value);
					this.SendPropertyChanging();
					this._CREATED_AT = value;
					this.SendPropertyChanged("CREATED_AT");
					this.OnCREATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_CART_PRODUCT", Storage="_CART_PRODUCTs", ThisKey="PRODUCT_ID", OtherKey="PRODUCT_ID")]
		public EntitySet<CART_PRODUCT> CART_PRODUCTs
		{
			get
			{
				return this._CART_PRODUCTs;
			}
			set
			{
				this._CART_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ORDER_PRODUCT", Storage="_ORDER_PRODUCTs", ThisKey="PRODUCT_ID", OtherKey="PRODUCT_ID")]
		public EntitySet<ORDER_PRODUCT> ORDER_PRODUCTs
		{
			get
			{
				return this._ORDER_PRODUCTs;
			}
			set
			{
				this._ORDER_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_PRODUCT_PRODUCT", Storage="_TYPE_PRODUCT", ThisKey="TYPE_ID", OtherKey="TYPE_ID", IsForeignKey=true)]
		public TYPE_PRODUCT TYPE_PRODUCT
		{
			get
			{
				return this._TYPE_PRODUCT.Entity;
			}
			set
			{
				TYPE_PRODUCT previousValue = this._TYPE_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_PRODUCT.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._TYPE_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._TYPE_ID = value.TYPE_ID;
					}
					else
					{
						this._TYPE_ID = default(int);
					}
					this.SendPropertyChanged("TYPE_PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CART_PRODUCTs(CART_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_CART_PRODUCTs(CART_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_ORDER_PRODUCTs(ORDER_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_ORDER_PRODUCTs(ORDER_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SESSIONS")]
	public partial class SESSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _sid;
		
		private string _session1;
		
		private System.DateTime _expires;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void Onsession1Changing(string value);
    partial void Onsession1Changed();
    partial void OnexpiresChanging(System.DateTime value);
    partial void OnexpiresChanged();
    #endregion
		
		public SESSION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="session", Storage="_session1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string session1
		{
			get
			{
				return this._session1;
			}
			set
			{
				if ((this._session1 != value))
				{
					this.Onsession1Changing(value);
					this.SendPropertyChanging();
					this._session1 = value;
					this.SendPropertyChanged("session1");
					this.Onsession1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expires", DbType="DateTime NOT NULL")]
		public System.DateTime expires
		{
			get
			{
				return this._expires;
			}
			set
			{
				if ((this._expires != value))
				{
					this.OnexpiresChanging(value);
					this.SendPropertyChanging();
					this._expires = value;
					this.SendPropertyChanged("expires");
					this.OnexpiresChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STAFF")]
	public partial class STAFF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STAFF_ID;
		
		private string _NAME;
		
		private string _EMAIL;
		
		private string _PHONE;
		
		private string _PASSWORD;
		
		private System.Nullable<bool> _ISADMIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTAFF_IDChanging(int value);
    partial void OnSTAFF_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnISADMINChanging(System.Nullable<bool> value);
    partial void OnISADMINChanged();
    #endregion
		
		public STAFF()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STAFF_ID
		{
			get
			{
				return this._STAFF_ID;
			}
			set
			{
				if ((this._STAFF_ID != value))
				{
					this.OnSTAFF_IDChanging(value);
					this.SendPropertyChanging();
					this._STAFF_ID = value;
					this.SendPropertyChanged("STAFF_ID");
					this.OnSTAFF_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISADMIN", DbType="Bit")]
		public System.Nullable<bool> ISADMIN
		{
			get
			{
				return this._ISADMIN;
			}
			set
			{
				if ((this._ISADMIN != value))
				{
					this.OnISADMINChanging(value);
					this.SendPropertyChanging();
					this._ISADMIN = value;
					this.SendPropertyChanged("ISADMIN");
					this.OnISADMINChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_PRODUCTS")]
	public partial class TYPE_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TYPE_ID;
		
		private string _NAMETYPE;
		
		private string _FLAG;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTYPE_IDChanging(int value);
    partial void OnTYPE_IDChanged();
    partial void OnNAMETYPEChanging(string value);
    partial void OnNAMETYPEChanged();
    partial void OnFLAGChanging(string value);
    partial void OnFLAGChanged();
    #endregion
		
		public TYPE_PRODUCT()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TYPE_ID
		{
			get
			{
				return this._TYPE_ID;
			}
			set
			{
				if ((this._TYPE_ID != value))
				{
					this.OnTYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._TYPE_ID = value;
					this.SendPropertyChanged("TYPE_ID");
					this.OnTYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMETYPE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NAMETYPE
		{
			get
			{
				return this._NAMETYPE;
			}
			set
			{
				if ((this._NAMETYPE != value))
				{
					this.OnNAMETYPEChanging(value);
					this.SendPropertyChanging();
					this._NAMETYPE = value;
					this.SendPropertyChanged("NAMETYPE");
					this.OnNAMETYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLAG", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FLAG
		{
			get
			{
				return this._FLAG;
			}
			set
			{
				if ((this._FLAG != value))
				{
					this.OnFLAGChanging(value);
					this.SendPropertyChanging();
					this._FLAG = value;
					this.SendPropertyChanged("FLAG");
					this.OnFLAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_PRODUCT_PRODUCT", Storage="_PRODUCTs", ThisKey="TYPE_ID", OtherKey="TYPE_ID")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_PRODUCT = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _NAME;
		
		private string _EMAIL;
		
		private string _PHONE;
		
		private string _PASSWORD;
		
		private string _RESET_TOKEN;
		
		private System.Nullable<System.DateTime> _TOKEN_EXPIRATION;
		
		private EntitySet<CART> _CARTs;
		
		private EntitySet<ORDER> _ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnRESET_TOKENChanging(string value);
    partial void OnRESET_TOKENChanged();
    partial void OnTOKEN_EXPIRATIONChanging(System.Nullable<System.DateTime> value);
    partial void OnTOKEN_EXPIRATIONChanged();
    #endregion
		
		public USER()
		{
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESET_TOKEN", DbType="NVarChar(255)")]
		public string RESET_TOKEN
		{
			get
			{
				return this._RESET_TOKEN;
			}
			set
			{
				if ((this._RESET_TOKEN != value))
				{
					this.OnRESET_TOKENChanging(value);
					this.SendPropertyChanging();
					this._RESET_TOKEN = value;
					this.SendPropertyChanged("RESET_TOKEN");
					this.OnRESET_TOKENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOKEN_EXPIRATION", DbType="DateTime")]
		public System.Nullable<System.DateTime> TOKEN_EXPIRATION
		{
			get
			{
				return this._TOKEN_EXPIRATION;
			}
			set
			{
				if ((this._TOKEN_EXPIRATION != value))
				{
					this.OnTOKEN_EXPIRATIONChanging(value);
					this.SendPropertyChanging();
					this._TOKEN_EXPIRATION = value;
					this.SendPropertyChanged("TOKEN_EXPIRATION");
					this.OnTOKEN_EXPIRATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_CART", Storage="_CARTs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_ORDER", Storage="_ORDERs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
}
#pragma warning restore 1591
